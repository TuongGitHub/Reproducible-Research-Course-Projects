install.packages(dplyr)
install.packages('dplyr')
install.packages('tidyr')
install.packages('data.table')
install.packages('sqldf')
install.packages('ggplot2')
install.packages('shiny')
install.packages('lubridate')
install.packages('xlsx')
install.packages('xml')
install.packages('XML')
install.packages('jsonlite')
install.packages('stringr')
install.packages('swirl')
install_from_swirl("Exploratory Data Analysis")
library('swirl')
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = 'blue')
abline(h = 12)
hist(ppm, col = 'green')
rug(ppm)
low
high
hist(ppm, col = 'green', break = 100)
hist(ppm, col = 'green', breaks = = 100)
hist(ppm, col = 'green', breaks = 100)
rug(ppm)
hist(ppm,col = 'green')
abline(v= 12, lwd=  2)
abline(v= 12, lwd=  4)
abline(v= median(ppm), col = 'magenta' ,lwd=  4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
reg
barplot(reg, col = 'wheat', main = 'Number of Counties in Each Region')
boxplot(pm25~region, data = pollution, col = 'red')
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution,region == 'east')
east <- subset(pollution,region == 'east')
head(east)
hist(east$pm25, col = 'green')
hist(subset(pollution,region == 'west'), col = 'green')
hist(subset(pollution$pm25,region == 'west'), col = 'green')
hist(subset(pollution,select = 'pm25', region == 'west'), col = 'green')
hist(subset(pollution,region == 'west')$pm25, col = 'green')
with(pollution, plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4,
| 2, 1))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region == 'west')
plot(west$latitude,west$pm25,main = 'West')
plot(east$latitude,east$pm25,main = 'East')
library(swirl)
swirl()
swirl()
colors(10)
head(colors(),10)
sample(colors(),10)
pal <- colorRamp(c('red','blue'))
pal(0)
pal(0.5)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette(c("red","blue"))
colorRampPalette(c("red","blue"))->p1
p1
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c('red','yellow')
)
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c('blue','green'))
p3 <- colorRampPalette(c('blue','green'),alpha=.5)
p3(5)
plot(x,y,pch = 19, col = rgb(0, .5,.5))
plot(x,y,pch = 19, col = rgb(0, .5,.5,.3))
cols <- brewer.pal(3,'BuGn')
showMe(cols)
colorRampPalette(cols)
colorRampPalette(cols) -> pal
showMe(pal(3))
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
library(swirl)
swirl(0)
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg, color=drv)
qplot(displ,hwy,data = mpg, color=drv, geom = c('point','smooth'))
qplot(y = hwy,data = mpg, color=drv)
myhigh
qplot(drv,hwy,data = mpg, geom = 'boxplot')
qplot(drv,hwy,data = mpg, geom = 'boxplot',color = manufacturer)
qplot(hwy,data = mpg, fill = drv)
qplot(displ,hwy,data = mpg, facets = .~drv)
qplot(hwy,data = mpg, facets = ~drv., binwidth = 2)
qplot(hwy,data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c('poitnt','smooth'), facets = .~drv)
qplot(displ, hwy, data=mpg, geom = c('point','smooth'), facets = .~drv)
g <- ggplot(data = mpg, aes(displ,hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = 'lm')
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(.~drv) + ggtitle('Swirl Riles!')
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(.~drv) + ggtitle('Swirl Rules!')
g + geom_point(color = 'pink', size = 4, alpha = 1/2)
g + geom_point(color = drv, size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = 'Swirl Rules!') + labs(x = "Displacement", y = "Hwy Mileage" )
g + geom_point(aes(color = drv)) + labs(title = 'Swirl Rules!') + labs(x = "Displacement", y = "Hwy Mileage" )
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4,linetype = 3, method = 'lm, se = FALSE')
g + geom_point(size = 2, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4,linetype = 3, method = 'lm', se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = 'Times' )
plot(myx, myy, type="l", ylim=c(-3,3))
ggplot(data = testdat,aes(myx, myy))
ggplot(data = testdat,aes(myx, myy)) -> g
g + geom_line(0)
g + geom_line()
g + geom_line() + ylim((-3,3))
g + geom_line() + ylim((-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method = 'lm', size = 2, color = 'black')
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method = 'lm', size = 2, se = FALSE, color = 'black')
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method = 'lm', size = 2, se = FALSE, color = 'black')+ labs(x = "Displacement", y = "Highway, title = "Swirl Rules!")
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method = 'lm', size = 2, se = FALSE, color = 'black')+ labs(x = "Displacement", y = "Highway", title = "Swirl Rules!")
g + geom_point()+ facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method = 'lm', size = 2, se = FALSE, color = 'black')+ labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = 'density')
qplot(price, data = diamonds, geom = 'density', col = cut)
qplot(price, data = diamonds, geom = 'density', color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth = 'lm')
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = 'lm'))
qplot(carat, price, data = diamonds, color = cut) +  geom_smooth(method = 'lm')
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) +  geom_smooth(method = 'lm')
g <- ggplot(data = diamonds, aes(depth,price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length = 4),na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(data = diamonds, aes(depth,price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) +geom_smooth(method = 'lm', size =3, color = 'pink')
g + geom_boxplot()
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
str(p)
p
trellis.par.get(p)
class(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(swirl)
swirl()
dist(dataFrame)
hclust(dist(dataFrame))
hclust(d=dist(dataFrame))
hc <- hclust(d=dist(dataFrame))
hc
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col='blue')
abline(h=.4,col='red')
5
abline(h=.05,col='red')
12
abline(h=.05,col='green')
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy.col = c('red','orange','purple'),pch = 3, cex = 2, lwd  = 2)
points(cx,cy,col = c('red','orange','purple'),pch = 3, cex = 2, lwd  = 2)
mdis(x,y,cx,cy)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19.cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tt
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,pch=8,cex=4,col=col1,lwd=2)
points(newCx,newCy,pch=8,cex=4,col=cols1,lwd=2)
points(newCx,newCy,pch=8,cex=2,col=cols1,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points()
points(newClust2)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1, pch=9, cex=2 , lwd=2)
kmeans(dataFrame,3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green").pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
getwd()
library(swirl)
swirl()
qplot(x = displ, y = hwy, data = mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(data = mpg, aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm") + facet_grid(facets = .~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(facets = .~drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))  + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv))  + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))  + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(size = 2, alpha = 1/2, aes(color = drv))  + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
ggplot(testdat, aes(myx,myy))
ggplot(testdat, aes(myx,myy)) + geom_line()
g <- ggplot(testdat, aes(myx,myy)) + geom_line()
g <- ggplot(testdat, aes(x=myx,y=myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
info()
skip()
g+geom_line()
g+geom_line() + ylim(-3,3)
g+geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(displ,hwy),color=factor(year))
g <- ggplot(mpg,aes(x = displ,y = hwy,color=factor(year))
)
g + geom_point()
g + geom_point() + facet_grid
g + geom_point() + facet_grid(drv~cyl,margins = TRUE)
g + geom_point() + facet_grid(drv~cyl,margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl,margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(x = price, data = diamonds)
range(diamonds$price)
qplot(x = price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(x = price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(x = price, data = diamonds,geom = "density")
qplot(x = price, data = diamonds,geom = "density", color = cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds,shape = cut)
qplot(carat,price,data = diamonds,color = cut)
qplot(carat,price,data = diamonds,color = cut)+geom_smooth(method = "lm")
qplot(carat,price,data = diamonds,color = cut)+geom_smooth(method = "lm")+facets(.~cut)
qplot(carat,price,data = diamonds,color = cut)+geom_smooth(method = "lm")+facet_grid(.~cut)
qplot(carat,price,data = diamonds,color = cut, facets=.~cut)+geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
g
summary(g)
g + geom_point
g + geom_point(alpha=1/3)
cutpoints <- quantile(0,1,length=4,na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)+geom_smooth(method= "lm",size = 3,color = "pink")
ggplot(data= diamonds, aes(carat,price))+geom_boxplot()+ facet_grid(. ~ cut)
library(swirl)
swirl()
dim(ssd)
names(ssd[,c(562,563)])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(sdd,subject = 1)
sub1 <- subset(ssd,subject = 1)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
rm(list = ls())
setwd("C:/Data Science/Reproducible Research/Course Project 1")
install.packages('R markdown')
install.packages('R Markdown')
install.packages('RMarkdown')
install.packages('rmarkdown')
activity <- read.csv('activity.csv')
View(activity)
activity <- read.csv('activity.csv',colClasses = c('int','date',int')
head(activity)
activity <- read.csv('activity.csv',colClasses = c('int','date',int'))
head(activity)
activity <- read.csv('activity.csv',colClasses = c('int','date',int'))
activity <- read.csv('activity.csv',colClasses = c('integer','Date',integer'))
)
activity <- read.csv('activity.csv',colClasses = ('integer','Date',integer'))
activity <- read.csv('activity.csv',colClasses = c['integer','Date',integer'])
activity <- read.csv('activity.csv',colClasses = c('integer','Date',integer')
activity <- read.csv('activity.csv')
activity <- read.csv('activity.csv',colClasses = c('integer','Date',integer'))
activity <- read.csv('activity.csv', colClasses = c('integer','Date',integer'))
activity <- read.csv('activity.csv',colClasses = c('integer','Date','integer'))
daily_steps <- aggregate(x = activity, by = 'date', sum, na.rm = TRUE)
activity <- read.csv('activity.csv')
daily_steps <- aggregate(x = activity, by = 'date', sum, na.rm = TRUE)
daily_steps <- aggregate(x = activity, by = list('date'), sum, na.rm = TRUE)
daily_steps <- aggregate(x = activity, by = list(activity$date), sum, na.rm = TRUE)
daily_steps <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
View(daily_steps)
View(daily_steps)
daily_steps1 <- tapply(activity$steps, factor(activity$date), sum, na.rm = TRUE)
library(data.table)
library('data.table')
daily_steps1 <- data.table(daily_steps1,keep.rownames = TRUE)
daily_steps1 <- tapply(activity$steps, factor(activity$date), sum, na.rm = TRUE)
View(daily_steps1)
daily_steps1 <- data.table(daily_steps1,keep.rownames = TRUE)
View(daily_steps1)
View(daily_steps1)
daily_steps <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
library('dplyr')
library('data.table')
library('ggplot2')
daily_steps <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
colnames(daily_steps) < c("date","steps")
daily_steps <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
colnames(daily_steps) <- c("date","steps")
hist(daily_steps$steps,breaks = daily_steps$date)
hist(daily_steps$steps)
hist(daily_steps$steps,breaks = 50)
daily <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
colnames(daily) < c("date","steps")
hist(daily$steps,breaks = 50)
View(activity)
View(activity)
class(activity)
daily <- aggregate(x = activity$steps, by = list(activity$date), sum, na.rm = TRUE)
colnames(daily) <- c("date","steps")
summary(daily$steps)
summary(daily$steps) -> s
library(xtable)
xtable(s)
?xtable
?summary
---
title: "Acitivity Monitoring"
author: "Tuong Nguyen"
date: "October 12, 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
